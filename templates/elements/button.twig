{# {% import "macros/icons.twig" as icon %} #}

{# Set defaults #}
{% set defaults = {
	data: {
		name: 'inc-button',
		button: {
			text: null,
			url: null,
			target: null,
		},
		variant: 'primary',
		icon: null,
		iconSize: '24',
		buttonType: 'button',
		reverse: false,
	},
	classes: {
		root: 'items-center font-bold px-6 py-2 rounded inline-flex',
    	custom: '',
	},
	variants: {
		primary: 'text-white border border-transparent bg-primary',
		secondary: 'text-secondary-900 border border-transparent bg-secondary',
		outlined: 'text-gray-900 border border-gray-200 bg-transparent',
	}
} %}

{% set props = {
	data: data is defined and data is iterable ? defaults.data | merge(data) : defaults.data,
  	classes: classes is defined and classes is iterable ? defaults.classes | merge(classes) : defaults.classes,
  	variants: defaults.variants,
} %}


{# Set base classes #}
{% set classes = [props.classes.root] %}

{# Add variant classes #}
{% if props.variants[props.data.variant] %}
	{% set classes = classes|merge([props.variants[props.data.variant]]) %}
{% endif %}

{# Add custom class #}
{% if props.classes.custom is not null %}
	{% set classes = classes|merge([props.classes.custom]) %}
{% endif %}

{# Merge classes #}
{% set classes = classes|join(' ') %}

{# Return HTML #}
	{% if props.data.button.title or props.data.icon %}
	{% set tag = props.data.button.url ? 'a' : 'button' %}
	{% set attr = props.data.button.url ? 'href=' ~ props.data.button.url : 'type=' ~ props.data.buttonType %}

		<{{tag}} {{ attr }} {{ props.data.button.url and props.data.button.target ? 'target=' ~ props.data.button.target : '' }} class="{{ props.data.name }} {{classes}}"> 
		
		{% if props.data.icon %}
			{{ icon.icon(props.data.icon, {class: props.data.reverse ? 'order-2' : '', width: props.data.iconSize}) }}
		{% endif %}

		{{ props.data.button.title ?? null }}
	</{{tag}}>
{% endif %}

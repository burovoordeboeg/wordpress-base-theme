# Circleci config based on gitflow
# 
# Needs setting of variables:
# - SERVER            string  Number of the server    (pick: W195, W205, W210)
# - USER              string  Name of user on server  (example: "buroboeg")
# - DOMAIN_TEST       string  Domain to deploy to     (example: "example-w205.test.example.com")
# - DOMAIN_ACCEPTANCE string  Domain to deploy to     (example: "example-w205.accept.example.com")
# - DOMAIN_PRODUCTION string  Domain to deploy to     (example: "www.example.com")
# - THEME_DIR         string  Name of the theme dir   (example: "base-theme")
#
# Rest of the variables are from the context: buro-voor-de-boeg

version: 2.1

references:
  default: &default
    circleci_ip_ranges: true
    working_directory: ~/theme
    docker:
      - image: cimg/php:8.2-node
  
  # Add server key
  add_serverkey: &add_serverkey
    run:
        name: Add SSH keys for server
        command: |
          ssh-keyscan "$SERVER_IP" >> ~/.ssh/known_hosts

  # Rsync install
  rsync_install: &rsync_install
    run:
      name: Install rsync
      command: |
        sudo apt-get update -y
        sudo apt-get -y install rsync
  
  # NPM
  npm_restore_cache: &npm_restore_cache
    restore_cache:
      keys:
        - node-v4-{{ checksum "package.json" }}

  npm_save_cache: &npm_save_cache
    save_cache:
      key: node-v4-{{ checksum "package.json" }}
      paths:
        - node_modules

  npm_install: &npm_install
    run:
      name: Install NPM packages
      command: |
        npm install --silent
  
  # Composer
  composer_restore_cache: &composer_restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "composer.lock" }}
        - v1-dependencies-

  composer_save_cache: &composer_save_cache
    save_cache:
      key: composer-v1-{{ checksum "composer.lock" }}
      paths:
        - vendor
  
  composer_github_oauth: &composer_github_oauth
    run:
      name: Setup Github Oauth
      command: composer config --global --auth github-oauth.github.com $GITHUB_OAUTH_TOKEN

  composer_install: &composer_install
    run:
      name: Compile vendors from composer packages
      command: composer install -n --ignore-platform-reqs --optimize-autoloader --no-dev
  
  # Webpack builds
  vite_build_assets: &vite_build_assets
    run:
      name: Build assets
      command: npm run dev # Gebruik dit voor testomgevingen

  vite_build_production_assets: &vite_build_production_assets
    run:
      name: Build assets for production
      command: npm run build # Gebruik dit voor acceptatie- en productieomgevingen

# Setup commands
commands:
  # Dynamically set the server IP
  set_server_ip:
    description: "Dynamically set the server IP"
    steps:
      - run:
          name: "Check if SERVER is set"
          command: |
            echo "🔍 Debug: SERVER is '$SERVER'"
            if [ -z "$SERVER" ]; then
              echo "❌ Error: SERVER variable is missing or empty."
              exit 1
            fi

      - run:
          name: "Determine target server"
          command: |
            VAR_NAME="SERVER_W${SERVER}"
            echo "🔍 Debug: Looking for variable: $VAR_NAME"

            SERVER_IP=$(printenv "$VAR_NAME")

            if [ -z "$SERVER_IP" ]; then
              echo "❌ Error: SERVER_IP not found for SERVER=${SERVER}"
              exit 1
            fi

            echo "✅ Using SERVER_IP: $SERVER_IP"
            echo "export SERVER_IP=${SERVER_IP}" >> $BASH_ENV

  # rsync deploy command
  rsync_deploy:
    description: Rsync deploy to input path
    parameters:
      jobname:
        type: string
        default: "none"
      domain: 
        type: string
        default: ""
      theme_dir: 
        type: string
        default: ""
    steps:
      - run:
          name: Rsync deploy to <<parameters.jobname>>
          command: |
            if [ -z "<<parameters.domain>>" ]; then
                echo "Error: No domain specified to deploy to"
                exit 1
            fi
            rsync -avz --delete -e "ssh -p $SERVER_PORT -o StrictHostKeyChecking=no" --chown=$USER:$USER --exclude-from '.rsyncignore' . $USER@$SERVER_IP:/home/$USER/domains/<<parameters.domain>>/public_html/content/themes/<<parameters.theme_dir>>

jobs:
  "Test":
    <<: *default
    steps:
      - checkout
      - set_server_ip
      - <<: *rsync_install
      - <<: *npm_restore_cache
      - <<: *npm_install
      - <<: *npm_save_cache
      - <<: *vite_build_assets
      - <<: *composer_restore_cache
      - <<: *composer_github_oauth
      - <<: *composer_install
      - <<: *composer_save_cache
      - <<: *add_serverkey
      - rsync_deploy:
          jobname: "test"
          domain: $DOMAIN_TEST
          theme_dir: $THEME_DIR

  "Acceptance":
    <<: *default
    steps:
      - checkout
      - set_server_ip
      - <<: *rsync_install
      - <<: *npm_restore_cache
      - <<: *npm_install
      - <<: *npm_save_cache
      - <<: *vite_build_production_assets
      - <<: *composer_restore_cache
      - <<: *composer_github_oauth
      - <<: *composer_install
      - <<: *composer_save_cache
      - <<: *add_serverkey
      - rsync_deploy:
          jobname: "acceptance"
          domain: $DOMAIN_ACCEPTANCE
          theme_dir: $THEME_DIR

  "Production":
    <<: *default
    steps:
      - checkout
      - set_server_ip
      - <<: *rsync_install
      - <<: *npm_restore_cache
      - <<: *npm_install
      - <<: *npm_save_cache
      - <<: *vite_build_production_assets
      - <<: *composer_restore_cache
      - <<: *composer_github_oauth
      - <<: *composer_install
      - <<: *composer_save_cache
      - <<: *add_serverkey
      - rsync_deploy:
          jobname: "production"
          domain: $DOMAIN_PRODUCTION
          theme_dir: $THEME_DIR
      
workflows:
  "Feature deployment":
    jobs:
      - "Test": 
          context:
            - buro-voor-de-boeg
          filters:
            branches:
              only:
                - develop

  "Release deployment":
    jobs:
      - "Acceptance": 
          context:
            - buro-voor-de-boeg
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - "Approve deploy":
          type: approval
          requires:
            - "Acceptance"
          filters: &filter_production
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d+$/

      - "Production":
          requires:
            - "Acceptance"
            - "Approve deploy"
          context:
            - buro-voor-de-boeg
          filters: *filter_production

  "Hotfix deployment":
    jobs:
      - "Test": 
          context:
            - buro-voor-de-boeg
          filters: &filter_hotfix
            branches:
              ignore: /.*/
            tags:
              only: 
                # hotfix-
                - /^hotfix-.*$/

      - "Acceptance": 
          context:
            - buro-voor-de-boeg
          filters: *filter_hotfix

      - "Production": 
          context:
            - buro-voor-de-boeg
          filters: *filter_hotfix
